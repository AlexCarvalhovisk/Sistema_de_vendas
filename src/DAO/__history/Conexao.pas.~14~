unit Conexao;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.SQLite,
  FireDAC.Phys.SQLiteDef, FireDAC.Stan.ExprFuncs,
  FireDAC.Phys.SQLiteWrapper.Stat, FireDAC.VCLUI.Wait, Data.DB,
  FireDAC.Comp.Client, FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf,
  FireDAC.DApt, FireDAC.Comp.DataSet;

type
  TdmConexao = class(TDataModule)
    fdqListaBanco: TFDQuery;
    sqlConexao: TFDConnection;
    procedure DataModuleCreate(Sender: TObject);
  private
    const ARQUIVOCONFIGURACAO = 'ArquivoBDProjetoSisHosp.cfg';
  public
    procedure CarregarConfiguracoes;
    procedure Conectar;
    procedure Deconectar;
  end;

var
  dmConexao: TdmConexao;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TfrmDataModuleConexao }

//Aqui estou usando o arquivo de conexão da aplicação
procedure TdmConexao.CarregarConfiguracoes;
var
  //Aqui criei as variáveis da aplicação de conexão com o BD.
  ParametroNome : String;
  ParametroValor : String;
  Contador : Integer;
  ListaParametros : TStringList;
begin
  //Aqui estou limpando a conexão
  SQLConexao.Params.Clear;
  //Aqui estou testando se a conexão existe.
  if not FileExists(ARQUIVOCONFIGURACAO) then
    raise Exception.Create('Arquivo de configuração não encontrado');
    ListaParametros := TStringList.Create;
    try
      ListaParametros.LoadFromFile(ARQUIVOCONFIGURACAO);
      for Contador := 0 to Pred(ListaParametros.Count) do
        begin
          if ListaParametros[Contador].IndexOf('=') > 0 then
          begin
            //O Split quebra a linha em uma lista e vem pondo dado da lista em baixo de dado.
            //O Trim, acaba com os espações entre palavras da String, seja antes ou depois.
            ParametroNome := ListaParametros[Contador].Split(['=']) [0].Trim;
            ParametroValor := ListaParametros[Contador].Split(['=']) [1].Trim;
            SqlConexao.Params.Add(ParametroNome + '=' + ParametroValor);

          end;
        end;
    finally
      //Aqui estou limpando o Objeto da memória.
      ListaParametros.Free;
    end;
end;

procedure TdmConexao.Conectar;
begin
  SqlConexao.Connected;
end;

procedure TdmConexao.DataModuleCreate(Sender: TObject);
begin
  CarregarConfiguracoes;
  Conectar;
end;

procedure TdmConexao.Deconectar;
begin
  SqlConexao.Connected := False ;
end;

end.
