unit Cliente;

interface

uses

  eInterfaceCliente, System.SysUtils;

  type
    TCliente = class(TInterfacedObject, iCliente)

  private

    //Variáveis
    FCodigo: Integer;
    FNome: String;
    FCidade: String;
    FUF: String;

    //Seters
    procedure SetCidade(const Value: String);
    procedure SetNome(const Value: String);
    procedure SetUF(const Value: String);

    //Funções
    function SalvarCliente : String; virtual;
    function ListarCliente : String; virtual;
    function AtualizarCliente : Integer; virtual;
    function DeletarCliente : Integer; virtual;

  public

    //Getters
    property Codigo : Integer read FCodigo;
    property Nome : String read FNome write SetNome;
    property Cidade : String read FCidade write SetCidade;
    property UF : String read FUF write SetUF;

    constructor Create;
    destructor Destroy; override;

  end;

implementation

{ TCliente }

function TCliente.AtualizarCliente: Integer;
begin

end;

constructor TCliente.Create;
begin

end;

function TCliente.DeletarCliente: Integer;
begin

end;

destructor TCliente.Destroy;
begin

  inherited;
end;

function TCliente.ListarCliente: String;
begin

end;

function TCliente.SalvarCliente: String;
begin

end;

procedure TCliente.SetCidade(const Value: String);
begin
  FCidade := Value;
end;

procedure TCliente.SetNome(const Value: String);
begin
  FNome := Value;
end;

procedure TCliente.SetUF(const Value: String);
begin
  FUF := Value;
end;

end.
